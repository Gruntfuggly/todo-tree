{
    "name": "todo-tree",
    "displayName": "Todo Tree",
    "description": "Show TODO, FIXME, etc. comment tags in a tree view",
    "keywords": [
        "todo",
        "task",
        "tasklist",
        "multi-root ready"
    ],
    "version": "0.0.176",
    "license": "MIT",
    "icon": "resources/todo-tree.png",
    "publisher": "Gruntfuggly",
    "engines": {
        "vscode": "^1.5.0"
    },
    "repository": "https://github.com/Gruntfuggly/todo-tree",
    "scripts": {
        "test": "./node_modules/node-qunit/bin/cli.js -c utils.js -t test/tests.js"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "*"
    ],
    "main": "./extension",
    "contributes": {
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "todo-tree-container",
                    "title": "TODOs",
                    "icon": "resources/todo-tree-container.svg"
                }
            ]
        },
        "views": {
            "explorer": [
                {
                    "id": "todo-tree-view-explorer",
                    "name": "TODOs",
                    "when": "todo-tree-has-content && todo-tree-in-explorer"
                }
            ],
            "todo-tree-container": [
                {
                    "id": "todo-tree-view",
                    "name": "TODOs"
                }
            ]
        },
        "menus": {
            "view/title": [
                {
                    "command": "todo-tree.reveal",
                    "when": "view =~ /todo-tree/ && todo-tree-show-reveal-button == true",
                    "group": "navigation@1"
                },
                {
                    "command": "todo-tree.scanOpenFilesOnly",
                    "when": "view =~ /todo-tree/ && todo-tree-scan-mode == workspace && todo-tree-show-scan-mode-button == true",
                    "group": "navigation@2"
                },
                {
                    "command": "todo-tree.scanCurrentFileOnly",
                    "when": "view =~ /todo-tree/ && todo-tree-scan-mode == 'open files' && todo-tree-show-scan-mode-button == true",
                    "group": "navigation@2"
                },
                {
                    "command": "todo-tree.scanWorkspace",
                    "when": "view =~ /todo-tree/ && todo-tree-scan-mode == 'current file' && todo-tree-show-scan-mode-button == true",
                    "group": "navigation@2"
                },
                {
                    "command": "todo-tree.showFlatView",
                    "when": "view =~ /todo-tree/ && todo-tree-flat == false && todo-tree-tags-only == false",
                    "group": "navigation@3"
                },
                {
                    "command": "todo-tree.showTagsOnlyView",
                    "when": "view =~ /todo-tree/ && todo-tree-flat == true && todo-tree-tags-only == false",
                    "group": "navigation@3"
                },
                {
                    "command": "todo-tree.showTreeView",
                    "when": "view =~ /todo-tree/ && todo-tree-flat == false && todo-tree-tags-only == true",
                    "group": "navigation@3"
                },
                {
                    "command": "todo-tree.groupByTag",
                    "when": "view =~ /todo-tree/ && todo-tree-grouped == false",
                    "group": "navigation@4"
                },
                {
                    "command": "todo-tree.ungroupByTag",
                    "when": "view =~ /todo-tree/ && todo-tree-grouped == true",
                    "group": "navigation@4"
                },
                {
                    "command": "todo-tree.filter",
                    "when": "view =~ /todo-tree/ && todo-tree-filtered == false",
                    "group": "navigation@5"
                },
                {
                    "command": "todo-tree.filterClear",
                    "when": "view =~ /todo-tree/ && todo-tree-filtered == true",
                    "group": "navigation@5"
                },
                {
                    "command": "todo-tree.refresh",
                    "when": "view =~ /todo-tree/",
                    "group": "navigation@6"
                },
                {
                    "command": "todo-tree.expand",
                    "when": "view =~ /todo-tree/ && todo-tree-expanded == false && todo-tree-collapsible",
                    "group": "navigation@7"
                },
                {
                    "command": "todo-tree.collapse",
                    "when": "view =~ /todo-tree/ && todo-tree-expanded == true && todo-tree-collapsible",
                    "group": "navigation@7"
                }
            ],
            "view/item/context": [
                {
                    "command": "todo-tree.showOnlyThisFolder",
                    "when": "view =~ /todo-tree/ && viewItem == folder"
                },
                {
                    "command": "todo-tree.showOnlyThisFolderAndSubfolders",
                    "when": "view =~ /todo-tree/ && viewItem == folder"
                },
                {
                    "command": "todo-tree.excludeThisFolder",
                    "when": "view =~ /todo-tree/ && viewItem == folder"
                },
                {
                    "command": "todo-tree.filterClear",
                    "when": "view =~ /todo-tree/ && todo-tree-global-filter-active"
                },
                {
                    "command": "todo-tree.resetFolderFilter",
                    "when": "view =~ /todo-tree/ && todo-tree-folder-filter-active"
                }
            ]
        },
        "commands": [
            {
                "command": "todo-tree.showFlatView",
                "title": "Show Flat View",
                "category": "Todo Tree",
                "icon": {
                    "dark": "resources/icons/dark/flat.svg",
                    "light": "resources/icons/light/flat.svg"
                }
            },
            {
                "command": "todo-tree.showTagsOnlyView",
                "title": "Show Tags Only View",
                "category": "Todo Tree",
                "icon": {
                    "dark": "resources/icons/dark/tags.svg",
                    "light": "resources/icons/light/tags.svg"
                }
            },
            {
                "command": "todo-tree.showTreeView",
                "title": "Show Tree View",
                "category": "Todo Tree",
                "icon": {
                    "dark": "resources/icons/dark/tree.svg",
                    "light": "resources/icons/light/tree.svg"
                }
            },
            {
                "command": "todo-tree.refresh",
                "title": "Refresh",
                "category": "Todo Tree",
                "icon": {
                    "dark": "resources/icons/dark/refresh.svg",
                    "light": "resources/icons/light/refresh.svg"
                }
            },
            {
                "command": "todo-tree.expand",
                "title": "Expand Tree",
                "category": "Todo Tree",
                "icon": {
                    "dark": "resources/icons/dark/expand.svg",
                    "light": "resources/icons/light/expand.svg"
                }
            },
            {
                "command": "todo-tree.collapse",
                "title": "Collapse Tree",
                "category": "Todo Tree",
                "icon": {
                    "dark": "resources/icons/dark/collapse.svg",
                    "light": "resources/icons/light/collapse.svg"
                }
            },
            {
                "command": "todo-tree.filter",
                "title": "Filter Tree",
                "category": "Todo Tree",
                "icon": {
                    "dark": "resources/icons/dark/filter.svg",
                    "light": "resources/icons/light/filter.svg"
                }
            },
            {
                "command": "todo-tree.filterClear",
                "title": "Clear Filter",
                "category": "Todo Tree",
                "icon": {
                    "dark": "resources/icons/dark/clear-filter.svg",
                    "light": "resources/icons/light/clear-filter.svg"
                }
            },
            {
                "command": "todo-tree.groupByTag",
                "title": "Group by Tag",
                "category": "Todo Tree",
                "icon": {
                    "dark": "resources/icons/dark/tag.svg",
                    "light": "resources/icons/light/tag.svg"
                }
            },
            {
                "command": "todo-tree.ungroupByTag",
                "title": "Ungroup by Tag",
                "category": "Todo Tree",
                "icon": {
                    "dark": "resources/icons/dark/notag.svg",
                    "light": "resources/icons/light/notag.svg"
                }
            },
            {
                "command": "todo-tree.scanOpenFilesOnly",
                "title": "Scan Open Files Only",
                "category": "Todo Tree",
                "icon": {
                    "dark": "resources/icons/dark/scan-open-files.svg",
                    "light": "resources/icons/light/scan-open-files.svg"
                }
            },
            {
                "command": "todo-tree.scanCurrentFileOnly",
                "title": "Scan Current File Only",
                "category": "Todo Tree",
                "icon": {
                    "dark": "resources/icons/dark/scan-current-file.svg",
                    "light": "resources/icons/light/scan-current-file.svg"
                }
            },
            {
                "command": "todo-tree.scanWorkspace",
                "title": "Scan Workspace",
                "category": "Todo Tree",
                "icon": {
                    "dark": "resources/icons/dark/scan-workspace.svg",
                    "light": "resources/icons/light/scan-workspace.svg"
                }
            },
            {
                "command": "todo-tree.addTag",
                "title": "Add Tag",
                "category": "Todo Tree"
            },
            {
                "command": "todo-tree.removeTag",
                "title": "Remove Tag",
                "category": "Todo Tree"
            },
            {
                "command": "todo-tree.exportTree",
                "title": "Export Tree",
                "category": "Todo Tree"
            },
            {
                "command": "todo-tree.exportTreeAsJSON",
                "title": "Export Tree As JSON",
                "category": "Todo Tree"
            },
            {
                "command": "todo-tree.showOnlyThisFolder",
                "title": "Only Show This Folder",
                "category": "Todo Tree",
                "icon": {
                    "dark": "resources/icons/dark/filter.svg",
                    "light": "resources/icons/light/filter.svg"
                }
            },
            {
                "command": "todo-tree.showOnlyThisFolderAndSubfolders",
                "title": "Only Show This Folder And Subfolders",
                "category": "Todo Tree",
                "icon": {
                    "dark": "resources/icons/dark/filter.svg",
                    "light": "resources/icons/light/filter.svg"
                }
            },
            {
                "command": "todo-tree.excludeThisFolder",
                "title": "Hide This Folder",
                "category": "Todo Tree",
                "icon": {
                    "dark": "resources/icons/dark/filter.svg",
                    "light": "resources/icons/light/filter.svg"
                }
            },
            {
                "command": "todo-tree.resetFolderFilter",
                "title": "Reset Folder Filter",
                "category": "Todo Tree",
                "icon": {
                    "dark": "resources/icons/dark/clear-filter.svg",
                    "light": "resources/icons/light/clear-filter.svg"
                }
            },
            {
                "command": "todo-tree.reveal",
                "title": "Reveal Current File In Tree",
                "category": "Todo Tree",
                "icon": {
                    "dark": "resources/icons/dark/reveal.svg",
                    "light": "resources/icons/light/reveal.svg"
                }
            },
            {
                "command": "todo-tree.resetCache",
                "title": "Reset Cache",
                "category": "Todo Tree"
            }
        ],
        "configuration": {
            "type": "object",
            "title": "Todo Tree",
            "properties": {
                "todo-tree.filtering.excludedWorkspaces": {
                    "default": [],
                    "items": {
                        "type": "string"
                    },
                    "markdownDescription": "An array of workspace names to exclude as roots in the tree (wildcards can be used).",
                    "type": "array"
                },
                "todo-tree.filtering.excludeGlobs": {
                    "default": [],
                    "items": {
                        "type": "string"
                    },
                    "markdownDescription": "Globs for use in limiting search results by exclusion (applied after **includeGlobs**), e.g. `[\"**/*.txt\"]` to ignore all .txt files",
                    "type": "array"
                },
                "todo-tree.filtering.ignoreGitSubmodules": {
                    "default": false,
                    "markdownDescription": "If true, any subfolders containing a .git file will be ignored when searching.",
                    "type": "boolean"
                },
                "todo-tree.filtering.includedWorkspaces": {
                    "default": [],
                    "items": {
                        "type": "string"
                    },
                    "markdownDescription": "An array of workspace names to include as roots in the tree (wildcards can be used). An empty array includes all workspace folders.",
                    "type": "array"
                },
                "todo-tree.filtering.includeGlobs": {
                    "default": [],
                    "items": {
                        "type": "string"
                    },
                    "markdownDescription": "Globs for use in limiting search results by inclusion, e.g. `[\"**/unit-tests/*.js\"]` to only show .js files in unit-tests subfolders",
                    "type": "array"
                },
                "todo-tree.filtering.includeHiddenFiles": {
                    "default": false,
                    "markdownDescription": "Include hidden files (starting with a .)",
                    "type": "boolean"
                },
                "todo-tree.filtering.passGlobsToRipgrep": {
                    "default": true,
                    "markdownDescription": "By default the globs are passed into ripgrep to narrow the search. Set this to false to apply the globs *after* the search (pre 0.0.132 behaviour).",
                    "type": "boolean"
                },
                "todo-tree.filtering.useBuiltInExcludes": {
                    "default": "none",
                    "enum": [
                        "none",
                        "file excludes",
                        "search excludes",
                        "file and search excludes"
                    ],
                    "markdownDescription": "Add VSCode's `files.exclude` and/or `search.exclude` list to the ignored paths.",
                    "markdownEnumDescriptions": [
                        "Don't used any built in excludes",
                        "Use the Files:Exclude setting",
                        "Use the Search:Exclude setting",
                        "Use the Files:Exclude and the Search:Exclude setting"
                    ],
                    "type": "string"
                },
                "todo-tree.general.debug": {
                    "default": false,
                    "markdownDescription": "Create a debug channel in the Output view",
                    "type": "boolean"
                },
                "todo-tree.general.enableFileWatcher": {
                    "default": false,
                    "markdownDescription": "Set to true to enable automatic updates when files in the workspace are created, changed or deleted",
                    "type": "boolean"
                },
                "todo-tree.general.fileWatcherGlob": {
                    "default": "**/*",
                    "markdownDescription": "Glob for use with the file watcher. Change this if the default setting causes performance issues.",
                    "type": "string"
                },
                "todo-tree.general.revealBehaviour": {
                    "default": "start of todo",
                    "enum": [
                        "start of todo",
                        "end of todo",
                        "highlight todo",
                        "start of line",
                        "highlight line"
                    ],
                    "markdownDescription": "Sets where the cursor is positioned when revealing a todo",
                    "markdownEnumDescriptions": [
                        "Moves the cursor to the beginning of the todo",
                        "Moves the cursor to the end of the todo",
                        "Selects the todo text",
                        "Moves the cursor to the start of the line",
                        "Selects the whole line"
                    ],
                    "type": "string"
                },
                "todo-tree.general.rootFolder": {
                    "default": "",
                    "markdownDescription": "Folder in which to run the search (defaults to the workspace folder)",
                    "type": "string"
                },
                "todo-tree.general.statusBar": {
                    "default": "none",
                    "enum": [
                        "none",
                        "total",
                        "tags",
                        "top three",
                        "current file"
                    ],
                    "markdownDescription": "What to show in the status bar - nothing, total count, counts per tag, top three counts per tag or count of tags in the current file",
                    "markdownEnumDescriptions": [
                        "Only show the scanning status in the status bar",
                        "Show the total count of tags in the status bar",
                        "Show a breakdown of the count of each tag in the status bar",
                        "Show the count of the top three tags in the status bar",
                        "Show the count of tags in the current file in the status bar"
                    ],
                    "type": "string"
                },
                "todo-tree.general.statusBarClickBehaviour": {
                    "default": "reveal",
                    "enum": [
                        "cycle",
                        "reveal"
                    ],
                    "markdownDescription": "What to do when the status bar is clicked",
                    "markdownEnumDescriptions": [
                        "Toggle between showing total count and the top three tag counts",
                        "Reveal the tree view"
                    ],
                    "type": "string"
                },
                "todo-tree.general.tagGroups": {
                    "default": {},
                    "markdownDescription": "Allows similar tags to be grouped under the same type, e.g. `{ \"FIX\": [\"FIXME\",\"FIXIT\"] }`. *Note: All tags must also be in the `todo-tree.general.tags` tag list. If a tag group is defined, custom highlights apply to the group, not the tags within the group.*",
                    "type": "object"
                },
                "todo-tree.general.tags": {
                    "default": [
                        "BUG",
                        "HACK",
                        "FIXME",
                        "TODO",
                        "XXX"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "markdownDescription": "List of tags. *Note, if one tag starts with another tag, the longer tag should be specified first to prevent the shorter tag being matched.*",
                    "type": "array"
                },
                "todo-tree.highlights.customHighlight": {
                    "default": {
                        "BUG": {
                            "icon": "bug"
                        },
                        "FIXME": {
                            "icon": "flame"
                        }
                    },
                    "markdownDescription": "Custom configuration for highlighting, [Read more...](https://github.com/Gruntfuggly/todo-tree#highlighting)",
                    "type": "object"
                },
                "todo-tree.highlights.defaultHighlight": {
                    "default": {},
                    "markdownDescription": "Default configuration for highlighting. [Read more...](https://github.com/Gruntfuggly/todo-tree#highlighting)",
                    "type": "object"
                },
                "todo-tree.highlights.enabled": {
                    "default": true,
                    "markdownDescription": "Set to false to disable highlighting",
                    "type": "boolean"
                },
                "todo-tree.highlights.highlightDelay": {
                    "default": 500,
                    "markdownDescription": "Delay before highlighting tags within files (milliseconds)",
                    "type": "integer"
                },
                "todo-tree.highlights.schemes": {
                    "default": [
                        "file",
                        "untitled"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "markdownDescription": "Editor schemes to show highlights in. To show highlights in settings files, for instance, add 'vscode-userdata' or for output windows, use 'output'.",
                    "type": "array"
                },
                "todo-tree.regex.regex": {
                    "default": "((//|#|<!--|;|/\\*|'|^)\\s*($TAGS)|^\\s*- \\[ \\])",
                    "markdownDescription": "Regular expression for matching TODOs. *Note: $TAGS will be replaced by the tag list.*",
                    "type": "string"
                },
                "todo-tree.regex.regexCaseSensitive": {
                    "default": true,
                    "markdownDescription": "Use a case sensitive regular expression",
                    "type": "boolean"
                },
                "todo-tree.ripgrep.ripgrep": {
                    "default": "",
                    "markdownDescription": "Location of your version of ripgrep",
                    "type": "string"
                },
                "todo-tree.ripgrep.ripgrepArgs": {
                    "default": "--max-columns=1000 --no-config ",
                    "markdownDescription": "Additional arguments to pass to ripgrep (Use with caution!)",
                    "type": "string"
                },
                "todo-tree.ripgrep.ripgrepMaxBuffer": {
                    "default": 200,
                    "markdownDescription": "Size of the buffer to use for retrieving output from ripgrep (kilobytes)",
                    "type": "integer"
                },
                "todo-tree.tree.autoRefresh": {
                    "default": true,
                    "markdownDescription": "Refresh the tree when files are opened or saved",
                    "type": "boolean"
                },
                "todo-tree.tree.disableCompactFolders": {
                    "default": false,
                    "markdownDescription": "Prevent the tree from showing compact folders",
                    "type": "boolean"
                },
                "todo-tree.tree.expanded": {
                    "default": false,
                    "markdownDescription": "When opening new workspaces, show the tree initially fully expanded",
                    "type": "boolean"
                },
                "todo-tree.tree.filterCaseSensitive": {
                    "default": false,
                    "markdownDescription": "Set to true if you want the view filtering to be case sensitive",
                    "type": "boolean"
                },
                "todo-tree.tree.flat": {
                    "default": false,
                    "markdownDescription": "When opening new workspaces, show the tree initially as flat list of files",
                    "type": "boolean"
                },
                "todo-tree.tree.grouped": {
                    "default": false,
                    "markdownDescription": "When opening new workspaces, show the tree initially grouped by tag",
                    "type": "boolean"
                },
                "todo-tree.tree.hideIconsWhenGroupedByTag": {
                    "default": false,
                    "markdownDescription": "Save some space by hiding the item icons when grouped by tag",
                    "type": "boolean"
                },
                "todo-tree.tree.hideTreeWhenEmpty": {
                    "default": true,
                    "markdownDescription": "Normally, the tree is removed from the explorer view if nothing is found. Set this to false to keep the view present.",
                    "type": "boolean"
                },
                "todo-tree.tree.labelFormat": {
                    "default": "${tag} ${after}",
                    "markdownDescription": "Format for tree items",
                    "type": "string"
                },
                "todo-tree.tree.scanAtStartup": {
                    "default": true,
                    "markdownDescription": "Normally the tree is built as soon as the window is opened. If you have a large code base and want to manually start the scan, set this to false.",
                    "type": "boolean"
                },
                "todo-tree.tree.scanMode": {
                    "default": "workspace",
                    "enum": [
                        "workspace",
                        "open files",
                        "current file"
                    ],
                    "markdownDescription": "Set this to change which files are scanned",
                    "markdownEnumDescriptions": [
                        "Scan the whole workspace (or workspaces)",
                        "Scan open files only",
                        "Scan the current file only"
                    ],
                    "type": "string"
                },
                "todo-tree.tree.showBadges": {
                    "default": true,
                    "markdownDescription": "Show badges and SCM state in the tree view",
                    "type": "boolean"
                },
                "todo-tree.tree.showCountsInTree": {
                    "default": false,
                    "markdownDescription": "Show counts of TODOs in the tree",
                    "type": "boolean"
                },
                "todo-tree.tree.showInExplorer": {
                    "default": true,
                    "markdownDescription": "Show the tree in the explorer view",
                    "type": "boolean"
                },
                "todo-tree.tree.showScanModeButton": {
                    "default": false,
                    "markdownDescription": "Show a button on the tree view header to change between scanning the current file, open files, or the whole workspace.",
                    "type": "boolean"
                },
                "todo-tree.tree.showScanOpenFilesOrWorkspaceButton": {
                    "default": false,
                    "deprecationMessage": "This setting is no longer used, please use \"todo-tree.tree.scanMode\" instead.",
                    "type": "boolean"
                },
                "todo-tree.tree.showTagsFromOpenFilesOnly": {
                    "default": false,
                    "deprecationMessage": "This setting is no longer used, please use \"todo-tree.tree.scanMode\" instead.",
                    "type": "boolean"
                },
                "todo-tree.tree.sortTagsOnlyViewAlphabetically": {
                    "default": false,
                    "markdownDescription": "Sort items in the tags only view alphabetically instead of by file and line number",
                    "type": "boolean"
                },
                "todo-tree.tree.tagsOnly": {
                    "default": false,
                    "markdownDescription": "When opening new workspaces, show only tag elements in tree",
                    "type": "boolean"
                },
                "todo-tree.tree.tooltipFormat": {
                    "default": "${filepath}, line ${line}",
                    "markdownDescription": "Tree item tooltip format",
                    "type": "string"
                },
                "todo-tree.tree.trackFile": {
                    "default": true,
                    "markdownDescription": "Track the current file in the tree view",
                    "type": "boolean"
                }
            }
        }
    },
    "__metadata": {
        "id": "261cac81-cd7b-4555-bb41-0c2d2bcd3e70",
        "publisherId": "d4906d2e-f2ee-492d-9c7c-02b6160599ec",
        "publisherDisplayName": "Gruntfuggly"
    },
    "dependencies": {
        "comment-patterns": "^0.10.1",
        "find": "^0.3.0",
        "micromatch": "^4.0.2",
        "octicons": "^8.3.0",
        "treeify": "^1.1.0"
    }
}